# inspired by http://conda.pydata.org/docs/travis.html
#
# language: python causes grief on osx
language: generic
os:
   - osx
  # - linux
env:
#  - TRAVIS_PYTHON_VERSION=2.7 MPIRUN= FIPY_SOLVERS=pysparse
#  - TRAVIS_PYTHON_VERSION=2.7 MPIRUN= FIPY_SOLVERS=pysparse FIPY_INLINE=1
  - TRAVIS_PYTHON_VERSION=2.7 MPIRUN= FIPY_SOLVERS=scipy FIPY_VERBOSE_SOLVER=1
#  - TRAVIS_PYTHON_VERSION=3.6 MPIRUN= FIPY_SOLVERS=trilinos
#  - TRAVIS_PYTHON_VERSION=3.6 MPIRUN="mpirun -np 2" FIPY_SOLVERS=trilinos
#  - TRAVIS_PYTHON_VERSION=2.7 MPIRUN= FIPY_SOLVERS=petsc
#  - TRAVIS_PYTHON_VERSION=2.7 MPIRUN="mpirun -np 2" FIPY_SOLVERS=petsc
  - TRAVIS_PYTHON_VERSION=3.6 MPIRUN= FIPY_SOLVERS=scipy FIPY_VERBOSE_SOLVER=1
#  - TRAVIS_PYTHON_VERSION=3.6 MPIRUN= FIPY_SOLVERS=petsc
#  - TRAVIS_PYTHON_VERSION=3.6 MPIRUN="mpirun -np 2" FIPY_SOLVERS=petsc
cache: apt
branches:
  except:
    - nist-pages
before_install:
  # sudo ln -s /usr/lib/lapack/liblapack.so.3gf /usr/lib/lapack/liblapack.so.3;
  # sudo ldconfig;
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      sudo apt-get update;
    fi
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - PY3K=$(echo "$TRAVIS_PYTHON_VERSION >= 3.0" | bc)
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      export MINICONDA_OS_NAME=Linux;
    elif [[ $TRAVIS_OS_NAME = "osx" ]]; then
      export MINICONDA_OS_NAME=MacOSX;
    fi
  - if [[ $PY3K -eq 1 ]]; then
      export MINICONDA_VERSION=3;
    else
      export MINICONDA_VERSION=2;
    fi
  - wget https://repo.continuum.io/miniconda/Miniconda${MINICONDA_VERSION}-latest-${MINICONDA_OS_NAME}-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install --channel conda-forge mamba
  - conda create --quiet --name test-environment --show-channel-urls --channel conda-forge python=$TRAVIS_PYTHON_VERSION scipy mkl;
  - source activate test-environment
  # Useful for debugging any issues with conda
  - conda info -a
# script:
  - python timelu.py;
after_success:
  - conda env export
